version: '2'

services:
  prometheus:
    restart: ${CONTAINER_RESTART}
    privileged: true
    user: root
    container_name: ${CONTAINER_NAME_PREFIX}-prometheus
    image: prom/prometheus:${PROMETHEUS_VERSION}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090"]
      interval: 6s
      timeout: 5s
      retries: 10
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ${CONTAINER_MREMAP_PATH}/prometheus/:/etc/prometheus/
      - ${CONTAINER_MREMAP_PATH}/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.size=60GB'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - ${PROMETHEUS_PORT}:9090
    links:
      - cadvisor:cadvisor
    depends_on:
      - cadvisor
    networks:
      - back-tier

  node-exporter:
    restart: ${CONTAINER_RESTART}
    privileged: true
    user: root
    container_name: ${CONTAINER_NAME_PREFIX}-node-exporter
    image: prom/node-exporter:${NODE_EXPORTER_VERSION}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100"]
      interval: 6s
      timeout: 5s
      retries: 10
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    ports:
      - ${NODE_EXPORTER_PORT}:9100
    networks:
      - back-tier

  cadvisor:
    restart: ${CONTAINER_RESTART}
    privileged: true
    user: root
    image: google/cadvisor:${CADVISOR_VERSION}
    container_name: ${CONTAINER_NAME_PREFIX}-cadvisor
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 6s
      timeout: 5s
      retries: 10
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - ${CADVISOR_PORT}:8080
    networks:
      - back-tier

  grafana:
    restart: ${CONTAINER_RESTART}
    privileged: true
    user: root
    image: grafana/grafana:${GRAFANA_VERSION}
    container_name: ${CONTAINER_NAME_PREFIX}-grafana
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 6s
      timeout: 5s
      retries: 10
    environment:
      - TZ=Asia/Shanghai
    depends_on:
      - prometheus
    ports:
      - ${GRAFANA_PORT}:3000
    volumes:
      - ${CONTAINER_MREMAP_PATH}/grafana/data:/var/lib/grafana
      - ${CONTAINER_MREMAP_PATH}/grafana/plugins:/plugins
      - ${CONTAINER_MREMAP_PATH}/grafana/grafana.ini:/etc/grafana/grafana.ini
    env_file:
      - ${CONTAINER_MREMAP_PATH}/grafana/grafana.conf
    networks:
      - back-tier
      - front-tier


networks:
  front-tier:
    driver: bridge
  back-tier:
    driver: bridge

